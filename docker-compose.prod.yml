version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: regalino_backend
    restart: unless-stopped
    ports:
      - "8001:8000"  # Porta dedicata per regalino
    environment:
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD}@host.docker.internal:5432/regalino
      - REDIS_URL=redis://:${REDIS_PASSWORD}@host.docker.internal:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=False
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py migrate --noinput &&
             gunicorn mondodoro.wsgi:application --bind 0.0.0.0:8000 --workers 3"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: regalino_frontend
    restart: unless-stopped
    ports:
      - "3001:3000"  # Porta dedicata per regalino
    environment:
      - NEXT_PUBLIC_API_URL=/api
      - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - NODE_ENV=production
    depends_on:
      - backend

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: regalino_nginx
    restart: unless-stopped
    ports:
      - "8080:80"  # Porta temporanea per test
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - backend
      - frontend

volumes:
  static_volume:
    name: regalino_static
  media_volume:
    name: regalino_media
