version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: mondodoro_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: mondodoro
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mondodoro_network

  redis:
    image: redis:7-alpine
    container_name: mondodoro_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - mondodoro_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: mondodoro_backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD}@postgres:5432/mondodoro
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=False
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    networks:
      - mondodoro_network
    depends_on:
      - postgres
      - redis
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py migrate --noinput &&
             gunicorn mondodoro.wsgi:application --bind 0.0.0.0:8000 --workers 3"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: mondodoro_frontend
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_URL=/api
      - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - NODE_ENV=production
    networks:
      - mondodoro_network
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    container_name: mondodoro_nginx
    restart: unless-stopped
    ports:
      - "8088:80"  # Porta esterna per test (Traefik usa 80/443)
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/mondodoro.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./ssl:/etc/nginx/ssl  # Per certificati SSL se necessario
    networks:
      - mondodoro_network
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data:
    name: mondodoro_postgres_data
  redis_data:
    name: mondodoro_redis_data
  static_volume:
    name: mondodoro_static
  media_volume:
    name: mondodoro_media

networks:
  mondodoro_network:
    name: mondodoro_network
    driver: bridge

