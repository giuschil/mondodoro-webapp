# Generated by Django 4.2.7 on 2025-08-31 11:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('gift_lists', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PlatformSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform_fee_percentage', models.DecimalField(decimal_places=2, default=2.5, help_text='Platform fee percentage (e.g., 2.5 for 2.5%)', max_digits=5)),
                ('platform_fee_fixed', models.DecimalField(decimal_places=2, default=0.3, help_text='Fixed platform fee amount', max_digits=10)),
                ('minimum_contribution', models.DecimalField(decimal_places=2, default=1.0, help_text='Minimum contribution amount', max_digits=10)),
                ('maximum_contribution', models.DecimalField(decimal_places=2, default=10000.0, help_text='Maximum contribution amount', max_digits=10)),
                ('stripe_webhook_endpoint_secret', models.CharField(blank=True, help_text='Stripe webhook endpoint secret', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Platform Settings',
                'verbose_name_plural': 'Platform Settings',
            },
        ),
        migrations.CreateModel(
            name='WebhookEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_event_id', models.CharField(help_text='Stripe event ID', max_length=255, unique=True)),
                ('event_type', models.CharField(help_text='Stripe event type', max_length=100)),
                ('processed', models.BooleanField(default=False, help_text='Whether the event has been processed')),
                ('data', models.JSONField(help_text='Event data')),
                ('error_message', models.TextField(blank=True, help_text='Error message if processing failed', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Webhook Event',
                'verbose_name_plural': 'Webhook Events',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StripeAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_account_id', models.CharField(help_text='Stripe Connect account ID', max_length=255, unique=True)),
                ('account_status', models.CharField(choices=[('pending', 'Pending'), ('active', 'Active'), ('restricted', 'Restricted'), ('inactive', 'Inactive')], default='pending', help_text='Stripe account status', max_length=20)),
                ('onboarding_completed', models.BooleanField(default=False, help_text='Whether onboarding process is completed')),
                ('charges_enabled', models.BooleanField(default=False, help_text='Whether the account can receive charges')),
                ('payouts_enabled', models.BooleanField(default=False, help_text='Whether the account can receive payouts')),
                ('country', models.CharField(blank=True, help_text='Account country code', max_length=2, null=True)),
                ('currency', models.CharField(default='EUR', help_text='Account currency', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('jeweler', models.OneToOneField(help_text='Jeweler associated with this Stripe account', on_delete=django.db.models.deletion.CASCADE, related_name='stripe_account', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Stripe Account',
                'verbose_name_plural': 'Stripe Accounts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentIntent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stripe_payment_intent_id', models.CharField(help_text='Stripe Payment Intent ID', max_length=255, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Payment amount', max_digits=10)),
                ('currency', models.CharField(default='EUR', help_text='Payment currency', max_length=3)),
                ('status', models.CharField(choices=[('requires_payment_method', 'Requires Payment Method'), ('requires_confirmation', 'Requires Confirmation'), ('requires_action', 'Requires Action'), ('processing', 'Processing'), ('requires_capture', 'Requires Capture'), ('canceled', 'Canceled'), ('succeeded', 'Succeeded')], help_text='Payment Intent status', max_length=30)),
                ('client_secret', models.CharField(help_text='Client secret for frontend', max_length=255)),
                ('application_fee_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Platform fee amount', max_digits=10, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contribution', models.OneToOneField(help_text='Associated contribution', on_delete=django.db.models.deletion.CASCADE, related_name='payment_intent', to='gift_lists.contribution')),
            ],
            options={
                'verbose_name': 'Payment Intent',
                'verbose_name_plural': 'Payment Intents',
                'ordering': ['-created_at'],
            },
        ),
    ]
