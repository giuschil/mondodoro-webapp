# Generated by Django 4.2.7 on 2025-08-31 11:51

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GiftList',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Gift list title', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Gift list description', null=True)),
                ('target_amount', models.DecimalField(decimal_places=2, help_text='Target amount to raise', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('status', models.CharField(choices=[('draft', 'Bozza'), ('active', 'Attiva'), ('completed', 'Completata'), ('cancelled', 'Annullata')], default='draft', help_text='Gift list status', max_length=20)),
                ('is_public', models.BooleanField(default=True, help_text='Whether the gift list is publicly accessible')),
                ('allow_anonymous_contributions', models.BooleanField(default=True, help_text='Allow contributions without registration')),
                ('start_date', models.DateTimeField(blank=True, help_text='When the gift list becomes active', null=True)),
                ('end_date', models.DateTimeField(blank=True, help_text='When the gift list expires', null=True)),
                ('cover_image', models.ImageField(blank=True, help_text='Cover image for the gift list', null=True, upload_to='gift_lists/covers/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('jeweler', models.ForeignKey(help_text='Jeweler who created this gift list', on_delete=django.db.models.deletion.CASCADE, related_name='gift_lists', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Gift List',
                'verbose_name_plural': 'Gift Lists',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GiftListItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Item name', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Item description', null=True)),
                ('price', models.DecimalField(decimal_places=2, help_text='Item price', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('image', models.ImageField(blank=True, help_text='Item image', null=True, upload_to='gift_lists/items/')),
                ('quantity_available', models.PositiveIntegerField(default=1, help_text='Available quantity')),
                ('quantity_contributed', models.PositiveIntegerField(default=0, help_text='Quantity already contributed for')),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('gift_list', models.ForeignKey(help_text='Gift list this item belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='gift_lists.giftlist')),
            ],
            options={
                'verbose_name': 'Gift List Item',
                'verbose_name_plural': 'Gift List Items',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Contribution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('contributor_name', models.CharField(help_text='Contributor name', max_length=255)),
                ('contributor_email', models.EmailField(help_text='Contributor email', max_length=254)),
                ('contributor_message', models.TextField(blank=True, help_text='Message from contributor', null=True)),
                ('is_anonymous', models.BooleanField(default=False, help_text='Whether to display contributor anonymously')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Contribution amount', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('payment_status', models.CharField(choices=[('pending', 'In Attesa'), ('completed', 'Completato'), ('failed', 'Fallito'), ('refunded', 'Rimborsato')], default='pending', help_text='Payment status', max_length=20)),
                ('stripe_payment_intent_id', models.CharField(blank=True, help_text='Stripe Payment Intent ID', max_length=255, null=True)),
                ('stripe_session_id', models.CharField(blank=True, help_text='Stripe Checkout Session ID', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='When the payment was completed', null=True)),
                ('gift_list', models.ForeignKey(help_text='Gift list this contribution is for', on_delete=django.db.models.deletion.CASCADE, related_name='contributions', to='gift_lists.giftlist')),
            ],
            options={
                'verbose_name': 'Contribution',
                'verbose_name_plural': 'Contributions',
                'ordering': ['-created_at'],
            },
        ),
    ]
